[
    {
        "id": 86,
        "name": "SKKG",
        "slug": "skkg",
        "sortKey": "A.0",
        "baseUrl": "http://0.0.0.0:7001",
        "apiToken": "skkg__8736426534",
        "isDefault": "1",
        "isNoSlugMode": "1",
        "maxDefault": 100,
        "filteredLanguage": "de,en",
        "dynamicSuggestions": 2,
        "defaultModeTimeout": 3.0,
        "mixedModeTimeout": 1.0,
        "suggestSubjects": "%PREFIXES%\n# IF CURRENT_WORD_EMPTY #\n\n%WARMUP_QUERY_1%\n\n# ELSE #\n\nSELECT ?qleverui_entity (SAMPLE(?name) AS ?qleverui_name) (SAMPLE(?alias) AS ?qleverui_alias) (SAMPLE(?count) AS ?qleverui_count) WHERE {\n  { %WARMUP_QUERY_2% }\n  # IF !CURRENT_WORD_EMPTY #\n  FILTER REGEX(STR(?alias), \"^%CURRENT_WORD%\")\n  # ENDIF #\n} GROUP BY ?qleverui_entity ORDER BY DESC(?qleverui_count)\n\n# ENDIF #",
        "suggestPredicates": "%PREFIXES%\n# IF !CURRENT_SUBJECT_VARIABLE #\n\nSELECT ?qleverui_entity\n              (MIN(?name) as ?qleverui_name)\n              (MIN(?alias) as ?qleverui_alias)\n              (SAMPLE(?count_2) as ?qleverui_count)\n              ?qleverui_reversed WHERE {\n\n  { { SELECT ?qleverui_entity (COUNT(?qleverui_tmp) AS ?count_2)\n    WHERE { %CURRENT_SUBJECT% ?qleverui_entity ?qleverui_tmp  }\n    GROUP BY ?qleverui_entity }\n  BIND (0 AS ?qleverui_reversed) }\n  UNION\n  { { SELECT ?qleverui_entity (COUNT(?qleverui_tmp) AS ?count_2)\n    WHERE { ?qleverui_tmp ?qleverui_entity %CURRENT_SUBJECT%  }\n    GROUP BY ?qleverui_entity }\n    BIND (1 AS ?qleverui_reversed) }\n  { %WARMUP_QUERY_5% }\n  # IF !CURRENT_WORD_EMPTY #\n  FILTER REGEX(STR(?alias), \"%CURRENT_WORD%\", \"i\")\n  # ENDIF #\n} GROUP BY ?qleverui_entity ?qleverui_reversed ORDER BY DESC(?qleverui_count)\n\n# ENDIF #\n# IF CONNECTED_TRIPLES_EMPTY AND CURRENT_SUBJECT_VARIABLE #\n\nSELECT ?qleverui_entity\n              (MIN(?name) as ?qleverui_name)\n              (MIN(?alias) as ?qleverui_alias)\n              (SAMPLE(?count_1) as ?qleverui_count) WHERE {\n  { %WARMUP_QUERY_4% }\n  # IF !CURRENT_WORD_EMPTY #\n  FILTER REGEX(STR(?alias), \"%CURRENT_WORD%\", \"i\")\n  # ENDIF #\n} GROUP BY ?qleverui_entity ORDER BY DESC(?qleverui_count)\n\n# ENDIF #\n\n# IF !CONNECTED_TRIPLES_EMPTY AND CURRENT_SUBJECT_VARIABLE #\n\nSELECT ?qleverui_entity\n              (MIN(?name) as ?qleverui_name)\n              (MIN(?alias) as ?qleverui_alias)\n              (SAMPLE(?count_2) as ?qleverui_count) WHERE {\n  { SELECT ?qleverui_entity (COUNT(DISTINCT %CURRENT_SUBJECT%) AS ?count_2)\n    WHERE { %CONNECTED_TRIPLES% %CURRENT_SUBJECT% ?qleverui_entity ?qleverui_object }\n    GROUP BY ?qleverui_entity }\n  { %WARMUP_QUERY_5% }\n  # IF !CURRENT_WORD_EMPTY #\n  FILTER REGEX(STR(?alias), \"%CURRENT_WORD%\", \"i\")\n  # ENDIF #\n} GROUP BY ?qleverui_entity ORDER BY DESC(?qleverui_count)\n\n# ENDIF #",
        "suggestObjects": "%PREFIXES%\nSELECT ?qleverui_entity\n              (MIN(?name) AS ?qleverui_name)\n              (MIN(?alias) AS ?qleverui_alias)\n              (MAX(?count_1) AS ?qleverui_count) WHERE {\n  {\n\n    { SELECT ?qleverui_entity ?name ?alias ?count_1 WHERE {\n      { SELECT ?qleverui_entity (COUNT(?qleverui_entity) AS ?count_1) WHERE {\n        %CONNECTED_TRIPLES% %CURRENT_SUBJECT% %CURRENT_PREDICATE% ?qleverui_entity .\n      } GROUP BY ?qleverui_entity }\n      { %WARMUP_QUERY_3% }\n      # IF !CURRENT_WORD_EMPTY #\n      FILTER REGEX(STR(?alias), \"^%CURRENT_WORD%\")\n      # ENDIF #\n    } }\n\n  } UNION {\n\n    { SELECT ?qleverui_entity ?name ?alias ?count_1 WHERE {\n      { SELECT ?qleverui_entity (COUNT(?qleverui_entity) AS ?count_1) WHERE {\n        %CONNECTED_TRIPLES% %CURRENT_SUBJECT% %CURRENT_PREDICATE% ?qleverui_entity\n      } GROUP BY ?qleverui_entity }\n      %ENTITY_NAME_AND_ALIAS_PATTERN_DEFAULT%\n      # IF !CURRENT_WORD_EMPTY #\n      FILTER REGEX(STR(?alias), \"^%CURRENT_WORD%\")\n      # ENDIF #\n    } }\n\n  }\n} GROUP BY ?qleverui_entity ORDER BY DESC(?qleverui_count)",
        "subjectName": "?qleverui_entity skos:prefLabel ?qleverui_name .",
        "alternativeSubjectName": "SELECT ?qleverui_name WHERE {\n    ?qleverui_entity rdfs:label|crm:P190_has_symbolic_content|crm:P90_has_value ?qleverui_name .\n}",
        "predicateName": "SELECT ?qleverui_name WHERE {\n    ?qleverui_entity rdfs:label ?qleverui_name .\n}",
        "alternativePredicateName": "SELECT ?qleverui_name WHERE {\n    ?qleverui_entity skos:prefLabel ?qleverui_name .\n}",
        "objectName": "SELECT ?qleverui_name WHERE {\n    ?qleverui_entity rdfs:label ?qleverui_name .\n}",
        "alternativeObjectName": "SELECT ?qleverui_name WHERE {\n    ?qleverui_entity skos:prefLabel ?qleverui_name .\n}",
        "replacePredicates": "",
        "supportedKeywords": "prefix, select, distinct, where, order, limit, offset, optional, by, as, having, not, textlimit, contains-entity, contains-word, filter, group, union, optional, has-predicate, minus, values",
        "supportedFunctions": "asc, desc, avg, values, score, text, count, sample, min, max, average, concat, group_concat, langMatches, lang, regex, sum, dist, contains, str, strlen, substr, strstarts, strends, strbefore, strafter, contains, year, month, day, rand, abs, ceil, floor, round, log, exp, sqrt, sin, cos, tan, if, coalesce, bound, concat, replace, encode_for_uri, isiri, isblank, isliteral, isNumeric, bound",
        "supportedPredicateSuggestions": "rdf:type,skos:prefLabel",
        "suggestPrefixnamesForPredicates": "1",
        "fillPrefixes": "1",
        "filterEntities": "0",
        "suggestedPrefixes": "@prefix loc:   <http://id.loc.gov/vocabulary/relators/> .\r\n@prefix skkg:  <https://ontology.skkg.ch/> .\r\n@prefix mods:  <http://www.loc.gov/mods/v3> .\r\n@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .\r\n@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .\r\n@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix type:  <https://data.skkg.ch/type/> .\r\n@prefix crmdig: <http://www.ics.forth.gr/isl/CRMdig/> .\r\n@prefix wd:    <http://www.wikidata.org/entity/> .\r\n@prefix rso:   <http://www.researchspace.org/ontology/> .\r\n@prefix crmsci: <http://www.cidoc-crm.org/extensions/crmsci/> .\r\n@prefix aat:   <http://vocab.getty.edu/aat/> .\r\n@prefix oai:   <http://www.openarchives.org/OAI/2.0/> .\r\n@prefix xml:   <http://www.w3.org/XML/1998/namespace> .\r\n@prefix dcterms: <http://purl.org/dc/terms/> .\r\n@prefix sikart: <https://recherche.sik-isea.ch/en/sik:person-> .\r\n@prefix gnd:   <https://d-nb.info/gnd/> .\r\n@prefix crm:   <http://www.cidoc-crm.org/cidoc-crm/> .\r\n@prefix mets:  <http://www.loc.gov/METS/> .\r\n@prefix resource: <https://data.skkg.ch/> .\r\n@prefix timespan: <https://data.skkg.ch/timespan/> .\r\n@prefix viaf:  <https://viaf.org/viaf/> .\r\n@prefix ulan:  <http://vocab.getty.edu/page/ulan/> .\r\n@prefix multimedia: <https://data.skkg.ch/multimedia/> .\r\n@prefix la:    <https://linked.art/ns/terms/> .\r\n@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix person: <https://data.skkg.ch/person/> .\r\n@prefix wikidata: <https://www.wikidata.org/wiki/> .\r\n@prefix dc:    <http://purl.org/dc/elements/1.1/> .\r\n@prefix frbroo: <http://iflastandards.info/ns/fr/frbr/frbroo/> .\r\n@prefix object: <https://data.skkg.ch/object/> .",
        "suggestionEntityVariable": "?qleverui_entity",
        "suggestionNameVariable": "?qleverui_name",
        "suggestionAltNameVariable": "?qleverui_alias",
        "suggestionReversedVariable": "?qleverui_reversed",
        "frequentPredicates": "",
        "frequentPatternsWithoutOrder": "",
        "entityNameAndAliasPattern": "?qleverui_entity rdfs:label ?name . BIND(?name AS ?alias)",
        "entityScorePattern": "{ SELECT ?qleverui_entity (COUNT(?qleverui_predicate) AS ?count) WHERE { ?qleverui_entity ?qleverui_predicate ?qleverui_object } GROUP BY ?qleverui_entity }",
        "predicateNameAndAliasPatternWithoutContext": "BIND(?qleverui_entity AS ?name) BIND(?qleverui_entity AS ?alias)",
        "predicateNameAndAliasPatternWithContext": "BIND(?qleverui_entity AS ?name) BIND(?qleverui_entity AS ?alias)",
        "entityNameAndAliasPatternDefault": "BIND(?qleverui_entity AS ?name) BIND(?qleverui_entity AS ?alias)",
        "predicateNameAndAliasPatternWithoutContextDefault": "BIND(?qleverui_entity AS ?name) BIND(?qleverui_entity AS ?alias)",
        "predicateNameAndAliasPatternWithContextDefault": "BIND(?qleverui_entity AS ?name) BIND(?qleverui_entity AS ?alias)",
        "warmupQuery1": "SELECT ?qleverui_entity (SAMPLE(?name) AS ?qleverui_name) (SAMPLE(?alias) AS ?qleverui_alias) (SAMPLE(?count) AS ?qleverui_count) WHERE {\r\n  { SELECT ?qleverui_entity ?name ?alias ?count WHERE {\r\n    %ENTITY_SCORE_PATTERN%\r\n    %ENTITY_NAME_AND_ALIAS_PATTERN% }\r\n  ORDER BY ?qleverui_entity }\r\n} GROUP BY ?qleverui_entity ORDER BY DESC(?qleverui_count)",
        "warmupQuery2": "SELECT ?qleverui_entity ?name ?alias ?count WHERE {\r\n  %ENTITY_SCORE_PATTERN%\r\n  %ENTITY_NAME_AND_ALIAS_PATTERN%\r\n} INTERNAL SORT BY ?alias",
        "warmupQuery3": "SELECT ?qleverui_entity ?name ?alias ?count WHERE {\r\n  %ENTITY_SCORE_PATTERN%\r\n  %ENTITY_NAME_AND_ALIAS_PATTERN%\r\n} INTERNAL SORT BY ?qleverui_entity",
        "warmupQuery4": "SELECT ?qleverui_entity ?name ?alias ?count_1 WHERE {\r\n  { { SELECT ?qleverui_entity (COUNT(DISTINCT ?subject) AS ?count_1) WHERE { ?subject ?qleverui_entity ?qleverui_object } GROUP BY ?qleverui_entity }\r\n    %PREDICATE_NAME_AND_ALIAS_PATTERN_WITHOUT_CONTEXT%\r\n  } UNION {\r\n  { { SELECT ?qleverui_entity (COUNT(DISTINCT ?subject) AS ?count_1) WHERE { ?subject ?qleverui_entity ?qleverui_object } GROUP BY ?qleverui_entity }\r\n    %PREDICATE_NAME_AND_ALIAS_PATTERN_WITHOUT_CONTEXT_DEFAULT%\r\n  } } }",
        "warmupQuery5": "SELECT ?qleverui_entity ?name ?alias ?count_1 WHERE {\r\n  { { SELECT ?qleverui_entity (COUNT(DISTINCT ?subject) AS ?count_1) WHERE { ?subject ?qleverui_entity ?qleverui_object } GROUP BY ?qleverui_entity }\r\n    %PREDICATE_NAME_AND_ALIAS_PATTERN_WITH_CONTEXT%\r\n  } UNION {\r\n  { { SELECT ?qleverui_entity (COUNT(DISTINCT ?subject) AS ?count_1) WHERE { ?subject ?qleverui_entity ?qleverui_object } GROUP BY ?qleverui_entity }\r\n    %PREDICATE_NAME_AND_ALIAS_PATTERN_WITH_CONTEXT_DEFAULT%\r\n  } } }",
        "suggestSubjectsContextInsensitive": "%PREFIXES%\n# IF CURRENT_WORD_EMPTY #\n\n%WARMUP_QUERY_1%\n\n# ELSE #\n\nSELECT ?qleverui_entity (SAMPLE(?name) AS ?qleverui_name) (SAMPLE(?alias) AS ?qleverui_alias) (SAMPLE(?count) AS ?qleverui_count) WHERE {\n  { %WARMUP_QUERY_2% }\n  # IF !CURRENT_WORD_EMPTY #\n  FILTER REGEX(STR(?alias), \"^%CURRENT_WORD%\")\n  # ENDIF #\n} GROUP BY ?qleverui_entity ORDER BY DESC(?qleverui_count)\n\n# ENDIF #",
        "suggestPredicatesContextInsensitive": "%PREFIXES%\n\nSELECT ?qleverui_entity\n              (MIN(?name) as ?qleverui_name)\n              (MIN(?alias) as ?qleverui_alias)\n              (SAMPLE(?count_1) as ?qleverui_count) WHERE {\n  { %WARMUP_QUERY_4% }\n  # IF !CURRENT_WORD_EMPTY #\n  FILTER REGEX(STR(?alias), \"%CURRENT_WORD%\", \"i\")\n  # ENDIF #\n} GROUP BY ?qleverui_entity ORDER BY DESC(?qleverui_count)",
        "suggestObjectsContextInsensitive": "%PREFIXES%\n# IF CURRENT_WORD_EMPTY #\n\n%WARMUP_QUERY_1%\n\n# ELSE #\n\nSELECT ?qleverui_entity (SAMPLE(?name) AS ?qleverui_name) (SAMPLE(?alias) AS ?qleverui_alias) (SAMPLE(?count) AS ?qleverui_count) WHERE {\n  { %WARMUP_QUERY_2% }\n  # IF !CURRENT_WORD_EMPTY #\n  FILTER REGEX(STR(?alias), \"^%CURRENT_WORD%\")\n  # ENDIF #\n} GROUP BY ?qleverui_entity ORDER BY DESC(?qleverui_count)\n\n# ENDIF #",
        "mapViewBaseURL": ""
    }
]